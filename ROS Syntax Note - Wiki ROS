##### Installing and Configuring Your ROS Environment #####

	source /opt/ros/noetic/setup.bash

	mkdir -p ~/catkin_ws/src
	cd ~/catkin_ws/
	catkin_make

	source devel/setup.bash

	source devel/setup.bash



##### Navigating the ROS Filesystem #####

	rospack find [package_name]

	roscd <package-or-stack>[/subdir]

	echo $ROS_PACKAGE_PATH

	roscd log

	rosls <package-or-stack>[/subdir]



##### Creating a ROS Package #####

	cd ~/catkin_ws/src

	catkin_create_pkg <package_name> [depend1] [depend2] [depend3]

	cd ~/catkin_ws
	catkin_make

	rospack depends1 beginner_tutorials



	roscd beginner_tutorials
	// Open package.xml

	<?xml version="1.0"?>
	<package format="2">
	  <name>beginner_tutorials</name>
	  <version>0.1.0</version>
	  <description>The beginner_tutorials package</description>
	
	  <maintainer email="you@yourdomain.tld">Your Name</maintainer>
	  <license>BSD</license>
	  <url type="website">http://wiki.ros.org/beginner_tutorials</url>
	  <author email="you@yourdomain.tld">Jane Doe</author>

	  <buildtool_depend>catkin</buildtool_depend>

	  <build_depend>roscpp</build_depend>
	  <build_depend>rospy</build_depend>
	  <build_depend>std_msgs</build_depend>

	  <exec_depend>roscpp</exec_depend>
	  <exec_depend>rospy</exec_depend>
	  <exec_depend>std_msgs</exec_depend>

	</package>



##### Building a ROS Package #####

	cd ~/catkin_ws/
	catkin_make
	catkin_make install



##### Understanding ROS Nodes #####

	roscore
	
	rosrun [package_name] [node_name]
	
	rosrun turtlesim turtlesim_node __name:=my_turtle

	rosnode list

	rosnode info /rosout
	
	rosnode ping my_turtle



##### Understanding ROS Topics #####

	rosrun rqt_graph rqt_graph
	
	rostopic -h
	
	rostopic echo [topic]
	
	rostopic list -v
	
	rostopic type [topic]
	
	rosmsg show geometry_msgs/Twist
	
	rostopic type [topic] | rosmsg show
	
	rostopic pub [topic] [msg_type] [args]
	
	rostopic pub -1 /turtle1/cmd_vel geometry_msgs/Twist -- '[2.0, 0.0, 0.0]' '[0.0, 0.0, 1.8]'
	
	rostopic pub /turtle1/cmd_vel geometry_msgs/Twist -r 1 -- '[2.0, 0.0, 0.0]' '[0.0, 0.0, -1.8]'
	
	 rostopic hz [topic]
	 
	 rosrun rqt_plot rqt_plot
	 
	
	
##### Understanding ROS Services and Parameters #####

	rosservice list
	
	rosservice type [service]
	
	rosservice call [service] [args]
	
	rossrv show turtlesim/Spawm
	
	rosservice type /spawn | rossrv show
	
	rosparam list
	
	rosparam set [param_name] [args]
	
	rosparam get [param_name]
	
	rosparam dump [file_name] [namespace]
	
	rosparam load [file_name] [namespace]
	


##### Using rqt_console and roslaunch #####

	rosrun rqt_console rqt_console
	
	rosrun rqt_logger_level rqt_logger_level
	
	roslaunch [package] [filename.launch]
	
	touch turtlemimic.launch
	
	<launch>
	
	  <group ns="turtlesim1">
	    <node pkg="turtlesim" name="kiw" type="turtlesim_node"/>
	  </group>
	
	  <group ns="turtlesim2">
	    <node pkg="turtlesim" name="koh" type="turtlesim_node"/>
	  </group>
	
	  <node pkg="turtlesim" name="mimic" type="mimic">
	    <remap from="input" to="turtlesim1/turtle1"/>
	    <remap from="output" to="turtlesim2/turtle1"/>
	  </node>
	
	</launch>
	
	roslaunch turtlemimic.launch
	
	
	
##### Creating a ROS msg and srv #####

	roscd beginner_tutorials
	mkdir msg
	echo "int64 num" > msg/Num.msg
	
	// Open package.xml, and make sure these two lines are in it and uncommented
	<build_depend>message_generation</build_depend>
	<exec_depend>message_runtime</exec_depend>
	
	// Open CMakeLists.txt. Add the message_generation dependency to the find_package
	find_package(catkin REQUIRED COMPONENTS
	   roscpp
	   rospy
	   std_msgs
	   message_generation
	)
	
	// Make sure you export the message runtime dependency
	catkin_package(
	  ...
	  CATKIN_DEPENDS message_runtime ...
	  ...)
	  
	// Uncomment it and then replace the stand in Message*.msg files with your .msg file
	add_message_files(
	  FILES
	  Message1.msg
	  Message2.msg
	  Num.msg
	)
	
	// ensure the generate_messages() function is called
	generate_messages(
	  DEPENDENCIES
	  std_msgs
	)
	
	
	
	roscd beginner_tutorials
	mkdir srv
	
	// Instead of creating a new srv definition by hand, we will copy an existing one from another package
	roscp [package_name] [file_to_copy_path] [copy_path]
	
	// Open package.xml, and make sure these two lines are in it and uncommented
	<build_depend>message_generation</build_depend>
	<exec_depend>message_runtime</exec_depend>
	
	// Add the message_generation dependency to generate messages in CMakeLists.txt
	find_package(catkin REQUIRED COMPONENTS
	  roscpp
	  rospy
	  std_msgs
	  message_generation
	)
	
	// Uncomment it and replace the placeholder Service*.srv files for your service files
	add_service_files(
	  FILES
	  Service1.srv
	  Service1.srv
	  AddTwoInts.srv
	)
	
	
	
	roscd beginner_tutorials
	cd ../..
	catkin_make



##### Writing a Simple Publisher and Subscriber (Python) #####

	roscd beginner_tutorials
	mkdir scripts
	cd scripts
	
	touch your_node.py
	chmod +x your_node.py
	
	// Add the following to your CMakeLists.txt
	catkin_install_python(PROGRAMS scripts/your_node.py
	  DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
	)



##### ROS Serial Problem #####

// open file arduino -> examples -> ros_lib -> pubsub
ls /dev/ttyACM0

sudo adduser my_user_name dialout

roscore
rosrun rosserial_python serial_node.py _port:=/dev/ttyACM0 _baud:=57600



